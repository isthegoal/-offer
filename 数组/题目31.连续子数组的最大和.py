# coding: utf-8           使用学习生长法进行思考，  认真开始分析，  题不在多，在于精

'''
      题目：一个整数数组中的元素有正有负，在该数组中找出一 个连续子数组，要求该连续子数组中各元素的和最大，这个连续子数组便被称作最大连续子数组。
      比如数组{2,4,-7,5,2,-1,2,-4,3}的最大连续子数组为{5,2,-1,2}，最大连续子数组的和为5+2-1+2=8。问题输入就是一个数组，输出该数组的“连续子数组的最大和”。

      分析：思路非常简单，在顺丰面试时候也被考过，就直接是动态规划，一步步规划即可
      动态规划基本思想：把原来走的步骤的结果当做结论，现在走的步利用这一结论。  现有情况跟之前的情况无关


      思路：因为这里是和的形式，那就核心使用到0的因素，如果现有的计算 能够大于0，那么后面的数加上就会有增益，如果小于0，那后面的加上就会减小。
      如果等于0，那也舍弃呗，无所谓的。


      这里还有个情况，如果数组全都是负数的话，没影响的


'''
def fun1(arr):
    ret=float('-inf')  #大的对最大累计和的统计

    #边界条件设定，数组为空
    if not arr:
        return ret

    cur=0 #当前累计和统计

    for i in arr:

        #如果之前的为负数，那就从这个地方开始吧
        if cur<=0:
            cur=i

        else:
            cur+=i

        #对现在情况加上之后的思考比较。   这里如果全为负数的话，这里也是能够返回负数中的最大值，也没影响的.....
        ret=max(ret,cur)

    return ret








